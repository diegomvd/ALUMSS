val SPEXOut = Val[File]
val myseed = Val[Int]

val ksi = Val[Double]
val sar = Val[Double]
val a = Val[Double]
val w = Val[Double]
val Tag = Val[Double]
val Tab = Val[Double]
val Tr = Val[Double]
val Td = Val[Double]
val d = Val[Double]
val oString = Val[String]
val P = Val[Double]
val N = Val[Double]



val scriptTask =
  SystemExecTask(
    command = Seq(
      "./gillespie-ses 6000 0.05 40 0.1 0 ${ksi} ${sar} ${a} ${w} ${Tag} ${Tab} ${Tr} ${Td} ${d} 7000 OM "),
    )set(
      inputs+=(ksi,sar,a,w,Tag,Tab,Tr,Td,d),
      outputFiles += ("SPEXOut.dat",SPEXOut) ,
      resources+="/home/AD.LSM.CNRS.FR/diego.bengochea-paz/gillespie-land-use/gillespie-ses"
      // resources+="/home/karpouzi/Research/Chapter2/gillespie-land-use/gillespie-ses"
    )

val readOutput =
    ScalaTask("""
    val oString = scala.io.Source.fromFile(SPEXOut).mkString
    val outputs = oString.split(" ")
    val P = outputs(1).toDouble
    val N = outputs(2).toDouble
    """
    )set(
        inputs+=SPEXOut,
        outputs+=(P,N)
    )

val moleTask = MoleTask(scriptTask -- readOutput)

val env = LocalEnvironment(20)

PSEEvolution(
  evaluation = moleTask on env,
  parallelism = 20,
  termination = 200,
  genome = Seq(
    ksi in (0.5,1.0),
    sar in (0.0,1.0),
    a in (0.0,1.0),
    w in (0.0,3.0),
    Tag in (0.05,1.0),
    Tab in (50.0,100.0),
    Tr in (1.0,10.0),
    Td in (50.0,100.0),
    d in (1.0,4.0)
  ),
  objective = Seq(
    P in (0.0 to 1000.0 by 10.0),
    N in (0.0 to 1.0 by 0.1)
  ),
  stochastic = Stochastic(seed = myseed)
) hook (workDirectory / "gillespiePSEResults", frequency = 200)
