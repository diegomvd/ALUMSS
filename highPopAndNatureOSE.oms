/*
This script launches a Pattern Space Exploration on the human population-natural area phase space.
It is a preliminary analysis on the possible combinations of human and nature outputs before digging
on details of landscape structure and origins of suitable human nature combinations
*/

// Import the model plugin
import _file_.modelDeclaration._

val P = Val[Double]
val N = Val[Double]

val eukaryoteEnvironment = LocalEnvironment(40)

val readModelOutput =
    ScalaTask("""
    // read file as an array of lines and get last line
    val lastLine = scala.io.Source.fromFile(output).getLines.toList.last.mkString
    // split the string and store it in an array
    val values = lastLine.split(" ")
    val P = values(1).toDouble
    val N = values(2).toDouble
    """
    )set(
        inputs+=output,
        outputs+=(P,N)
    )

val modelRunAndRead = MoleTask(modelPluginEuka -- readModelOutput)

// def collapseCount(population: Array[Double]): Double = (population.groupBy(identity).mapValues(_.map(_ =>1).reduce(_+_))(0.0).toDouble)/(population.size.toDouble)

val naturePopOSE = OSEEvolution(
  evaluation = modelRunAndRead,
  parallelism = 40,
  termination = 40000,
  origin = Seq(
    nF in Seq(1.0,10.0,100.0,1000.0),
    a in (0.0 to 1.0 by 0.2),
    mS in (0.25 to 1.0 by 0.25),
    wS in (0.0 to 1.0 by 0.333),
  ),
  objective = Seq(
    -P under -250.0,
    -N under -0.5,
  ),
  stochastic = Stochastic(seed = mySeed, sample = 20)
)

(naturePopOSE on eukaryoteEnvironment hook (workDirectory / "resultsHighNaturePopOSE-coarse", frequency = 100) )

// P aggregate collapseCount _ under 0.1

// 5*4*10 = 200 origins
